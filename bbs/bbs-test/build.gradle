import org.gradle.util.GFileUtils
plugins {
	id 'org.springframework.boot' version '2.3.2.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id 'nu.studer.jooq' version '4.2' //jOOQを統合するプラグイン
}
apply plugin: 'java'
group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '14'

// 全ての依存関係を見つけるためにMavenのセントラルリポジトリを指定
repositories {
	mavenCentral()
}

dependencies {
	// SpringBootによって管理される依存関係ライブラリ 実装
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-jooq'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.jooq:jooq' // JOOQ導入
	runtimeOnly 'mysql:mysql-connector-java'
	// compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.15'
	//runtime "mysql:mysql-connector-java:8.0.15"
	jooqRuntime "mysql:mysql-connector-java:8.0.15"
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}



// JOOQプラグインの設定

jooq {

	version = '3.13.1' // JOOQのバージョン指定
	edition = 'OSS' // エディションの指定（無料版）
	generateSchemaSourceOnCompilation = true // コンパイル時にスキーマソースを生成する
	bbs(sourceSets.main) {

		jdbc {
			driver = 'com.mysql.cj.jdbc.Driver' // データベースドライバのクラス名
			url = 'jdbc:mysql://localhost:3306/bbs_test?serverTimezone=JST' // SQLに接続するためのURL
			user = 'keiziban' // データベースにログインするためのユーザー名
			password = 'secret' // データベースにログインするためのパスワード
			properties {
				property {
					key = 'ssl'
					value = 'false'
				}
			}
		}
		generator {
			name = 'org.jooq.codegen.DefaultGenerator'
			strategy {
				name = 'org.jooq.codegen.DefaultGeneratorStrategy'
				// ...
			}
			database {
				name = 'org.jooq.meta.mysql.MySQLDatabase' // 対象とするデータベース
				inputSchema = 'bbs_test' // データベース名
				forcedTypes {
					forcedType {
						name = 'varchar'
						expression = '.*'
						types = 'JSONB?'
					}
					forcedType {
						name = 'varchar'
						expression = '.*'
						types = 'INET'
					}
				}
				// ...
			}
			generate {
				relations = true
				deprecated = false
				records = true
				immutablePojos = true
				fluentSetters = true
				// ...
			}
			target {
				packageName = 'nu.studer.sample' // 生成されるコードのパッケージ名
				directory = 'src/main/java' // 生成されるコードを配置するディレクトリ
			}
		}
	}
}

test {
	useJUnitPlatform()
}
