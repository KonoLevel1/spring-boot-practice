package com.example.bbstest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.ui.Model;

@Controller // This means that this class is a Controller
@RequestMapping(path="/index") // This means URL's start with /demo (after Application path)
public class MainController {

    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private TweetRepository tweetRepository;

    @PostMapping(path="/add") // Map ONLY POST Requests
    public @ResponseBody String addNewUser (@RequestParam String name
            , @RequestParam String text) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        Tweet n = new Tweet();
        n.setName(name);
        n.setText(text);
        tweetRepository.save(n);
        return "Saved";
    }

    @GetMapping(path="/all")
    public @ResponseBody Iterable<Tweet> index() {
        // This returns a JSON or XML with the users
       String all[] = TweetRepository.findAll();
        model.addAttribute("param",all);
        return "index";
    }
    /*
    @GetMapping(path="/all")
    public @ResponseBody Iterable<Tweet> getAllTweets() {
        // This returns a JSON or XML with the users
        return tweetRepository.findAll();
    }
    */

}