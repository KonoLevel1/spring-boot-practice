/*
 * This file is generated by jOOQ.
 */
package nu.studer.sample;


import nu.studer.sample.tables.Tweet;
import nu.studer.sample.tables.records.TweetRecord;

import org.jooq.Identity;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>bbs_test</code> schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<TweetRecord, Integer> IDENTITY_TWEET = Identities0.IDENTITY_TWEET;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<TweetRecord> KEY_TWEET_PRIMARY = UniqueKeys0.KEY_TWEET_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<TweetRecord, Integer> IDENTITY_TWEET = Internal.createIdentity(Tweet.TWEET, Tweet.TWEET.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<TweetRecord> KEY_TWEET_PRIMARY = Internal.createUniqueKey(Tweet.TWEET, "KEY_tweet_PRIMARY", new TableField[] { Tweet.TWEET.ID }, true);
    }
}
